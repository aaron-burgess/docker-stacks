# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.
ARG BASE_CONTAINER
FROM $BASE_CONTAINER

LABEL maintainer="Jupyter Project <jupyter@googlegroups.com>"

USER root
## Install Device summarise 
RUN apt-get update && apt-get install -y --no-install-recommends pciutils

## Install NVIDIA Driver 418 or mount from AKS host
#RUN apt-get update && \
#	apt-get install -y --no-install-recommends software-properties-common  
#RUN apt-get update && add-apt-repository ppa:graphics-drivers/ppa
#RUN apt-get install -y --no-install-recommends nvidia-driver-418 && \
#    rm -rf /var/lib/apt/lists/*

## Install Cuda 10
# Add NVIDIA package repositories
RUN cd / && \
	wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.0.130-1_amd64.deb && \
	wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
# Install NVIDIA Driver
#RUN apt-get update && apt-get install -y --no-install-recommends nvidia-driver-418

# Install development and runtime libraries (~4GB)
RUN apt-get update && apt-get install -y --no-install-recommends gnupg2 && \
	cd / && dpkg -i cuda-repo-ubuntu1804_10.0.130-1_amd64.deb && \
	apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub && \
	apt-get update && \
	apt install ./nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb && \
	apt-get update && \
	apt-get install -y --no-install-recommends \
    cuda-10-0 \
    cuda-runtime-10-0 \
    cuda-libraries-10-0 \
    cuda-compiler-10-0 \
    libcudnn7=7.6.2.24-1+cuda10.0  \
    libcudnn7-dev=7.6.2.24-1+cuda10.0

RUN cd / && \
	rm cuda-repo-ubuntu1804_10.0.130-1_amd64.deb && \
	rm nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
	
RUN chown -R jovyan:users /home/$NB_USER/.gnupg && \
	chown -R root:users /usr/local/cuda-10.0

#RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin && \
#	mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
#RUN wget http://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda-repo-ubuntu1804-10-1-local-10.1.243-418.87.00_1.0-1_amd64.deb && \
#	dpkg -i cuda-repo-ubuntu1804-10-1-local-10.1.243-418.87.00_1.0-1_amd64.deb && \
#	apt-key add /var/cuda-repo-10-1-local-10.1.243-418.87.00/7fa2af80.pub && \
#	apt-get update && \
#	apt-get install -y --no-install-recommends cuda

USER $NB_USER
# Install Tensorflow
RUN pip install tensorflow-gpu && \
	#conda install --quiet --yes -c anaconda \
    #tensorflow-gpu && \
    #cudatoolkit \
    #cudnn && \
    #'keras=2.2' && \
    #conda install pytorch torchvision cudatoolkit=10.0 -c pytorch && \
    conda clean --all -f -y && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

RUN pip install --pre jupyter-tensorboard && \
	jupyter serverextension enable jupyter_tensorboard --py --sys-prefix && \
	jupyter nbextension enable jupyter_tensorboard --py --sys-prefix && \
    jupyter labextension install jupyterlab_tensorboard --no-build && \
    jupyter lab build --source-build=True && \
    conda clean --all -f -y && \
    npm cache clean --force && \
    rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
    rm -rf /home/$NB_USER/.cache/yarn && \
    rm -rf /home/$NB_USER/.node-gyp && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

# Allow drivers installed by the nvidia-driver-installer to be located
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64
# Also, utilities like `nvidia-smi` are installed here
ENV PATH=${PATH}:/usr/local/nvidia/bin:/usr/local/cuda/bin
